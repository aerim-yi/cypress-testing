/// Test for clicking through collections 
describe('Collections pop-up confirm', () => {

  Cypress.on('uncaught:exception', (err, runnable) => {
    // returning false here prevents Cypress from
    // failing the test
    return false
})

    function loginPageCheck() {
        cy.get('[data-test-id="signinButton"]').should('exist').and('contain.text', 'sign in');
      }
    
    it('Should navigate to collections, while not logged in', () => {
      // Initial Setup
      cy.visit('/');
      cy.navigateNavBar('collections');

      loginPageCheck();
    })

    it('Should navigate to collections, click on one item logged in and details should display', () => {
      // Initial Setup
      cy.visit('/');
      cy.login();
      cy.navigateNavBar('collections');

      const result = cy.get(':nth-child(1) > app-card > composited-card');
      const itemPage = result.click();
      itemPage.should('be.visible');
    })

    it('Should navigate to collections, click on all items on page and details should display', () => {
      // Initial Setup
      cy.visit('/');
      cy.login();
      cy.navigateNavBar('collections');
      
      for (let i = 0; i++; i < 32){
        const result = cy.get(':nth-child(${i}) > app-card > composited-card');
        const itemPage = result.click();
        itemPage.should('be.visible');
        itemPage.get('.closeIcon').click();
      }
    })

    it.only('Should navigate to collections, click page button random number of times, and should still work', () => {
      // Initial Setup
      cy.visit('/');
      cy.login();
      cy.navigateNavBar('collections');

      // Find Number of pages
      let pageString = String(cy.get('.currentPageText'))
      let pageNumber = pageString.split(' ')[3];
      let randomPageClick = Math.floor(Math.random() * parseInt(pageNumber));

      // Click pages number of times 
      let nextPage = cy.get('.paginationIcon--right')
      for (let i = 0; i++; i < randomPageClick){      
          nextPage.click();
      }

      // Iterate over that particular page 
      for (let i = 0; i++; i < 32){
        const result = cy.get(':nth-child(${i}) > app-card > composited-card');
        const itemPage = result.click();
        itemPage.should('be.visible');
        itemPage.get('.closeIcon').click();
      }
      })
    })
